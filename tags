!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Basemap	pandlines/plots.py	/^    from mpl_toolkits.basemap import Basemap$/;"	kind:namespace	line:9
Number	pandlines/common.py	/^from numbers import Number  # to check for number types$/;"	kind:namespace	line:3
PipelineStage	pandlines/pipeline.py	/^class PipelineStage(object):$/;"	kind:class	line:4
README	setup.py	/^    README = f.read()$/;"	kind:variable	line:13
ShimWarning	pandlines/__init__.py	/^    from IPython.utils.shimmodule import ShimWarning$/;"	kind:namespace	line:7
__call__	pandlines/pipeline.py	/^    __call__ = apply$/;"	kind:variable	line:38
__init__	pandlines/pipeline.py	/^    def __init__(self, requirements=lambda x: True):$/;"	kind:member	line:15
__init__.py	pandlines/__init__.py	1;"	kind:file	line:1
__version__	pandlines/__init__.py	/^__version__ = get_versions()['version']$/;"	kind:variable	line:14
_operation	pandlines/pipeline.py	/^    def _operation(self, df):$/;"	kind:member	line:18
absolute_import	pandlines/plots.py	/^from __future__ import division, print_function, absolute_import$/;"	kind:namespace	line:2
add_empty_missing_columns	pandlines/common.py	/^def add_empty_missing_columns(dataframe_to_check, expected_columns):$/;"	kind:function	line:9
apply	pandlines/pipeline.py	/^    def apply(self, df):$/;"	kind:member	line:21
arrays	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
author	docs/source/conf.py	/^author = 'Shay Palachy'$/;"	kind:variable	line:60
author	setup.py	/^    author="Shay Palachy",$/;"	kind:variable	line:19
author_email	setup.py	/^    author_email="shayp@theneura.com",$/;"	kind:variable	line:20
check	pandlines/common.py	/^from numbers import Number  # to check for number types$/;"	kind:namespace	line:3
cmdclass	setup.py	/^    cmdclass=versioneer.get_cmdclass(),$/;"	kind:variable	line:23
common.py	pandlines/common.py	1;"	kind:file	line:1
conf.py	docs/source/conf.py	1;"	kind:file	line:1
copyright	docs/source/conf.py	/^copyright = '2017, Shay Palachy'$/;"	kind:variable	line:59
days	pandlines/plots.py	/^from neutils.common.constants import days$/;"	kind:namespace	line:13
days_hist	pandlines/plots.py	/^def days_hist(data, ax=None):$/;"	kind:function	line:16
degree_hist	pandlines/plots.py	/^def degree_hist(data, *args, **kwargs):$/;"	kind:function	line:92
division	pandlines/plots.py	/^from __future__ import division, print_function, absolute_import$/;"	kind:namespace	line:2
exclude_patterns	docs/source/conf.py	/^exclude_patterns = []$/;"	kind:variable	line:90
extensions	docs/source/conf.py	/^extensions = [$/;"	kind:variable	line:33
find_packages	setup.py	/^from setuptools import find_packages$/;"	kind:namespace	line:8
for	pandlines/common.py	/^from numbers import Number  # to check for number types$/;"	kind:namespace	line:3
get_versions	pandlines/__init__.py	/^from ._version import get_versions$/;"	kind:namespace	line:13
html_sidebars	docs/source/conf.py	/^html_sidebars = { '**': ['globaltoc.html', 'relations.html', 'sourcelink.html', 'searchbox.html'], }$/;"	kind:variable	line:190
html_static_path	docs/source/conf.py	/^html_static_path = ['_static']$/;"	kind:variable	line:168
html_theme	docs/source/conf.py	/^html_theme = "sphinx_rtd_theme"$/;"	kind:variable	line:133
html_theme_path	docs/source/conf.py	/^html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]$/;"	kind:variable	line:134
htmlhelp_basename	docs/source/conf.py	/^htmlhelp_basename = 'datapydoc'$/;"	kind:variable	line:250
in	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
in	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
install_requires	setup.py	/^    install_requires=[$/;"	kind:variable	line:27
israel_map	pandlines/plots.py	/^def israel_map($/;"	kind:function	line:112
language	docs/source/conf.py	/^language = None$/;"	kind:variable	line:76
latex_documents	docs/source/conf.py	/^latex_documents = [$/;"	kind:variable	line:275
latex_elements	docs/source/conf.py	/^latex_elements = {$/;"	kind:variable	line:254
long_description	setup.py	/^    long_description=README,$/;"	kind:variable	line:24
man_pages	docs/source/conf.py	/^man_pages = [$/;"	kind:variable	line:317
master_doc	docs/source/conf.py	/^master_doc = 'index'$/;"	kind:variable	line:55
matplotlib	pandlines/plots.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:6
mongo	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
mongo	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
name	setup.py	/^    name='datapy',$/;"	kind:variable	line:21
np	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
np	pandlines/plots.py	/^import numpy as np$/;"	kind:namespace	line:5
number	pandlines/common.py	/^from numbers import Number  # to check for number types$/;"	kind:namespace	line:3
numpy	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
os	docs/source/conf.py	/^import os$/;"	kind:namespace	line:20
packages	setup.py	/^    packages=find_packages(),$/;"	kind:variable	line:26
pandas	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
parse_value_for_mongo	pandlines/common.py	/^def parse_value_for_mongo(value):$/;"	kind:function	line:18
parsing	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
parsing	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
pd	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
pipeline.py	pandlines/pipeline.py	1;"	kind:file	line:1
plot_confusion_matrix	pandlines/plots.py	/^def plot_confusion_matrix($/;"	kind:function	line:167
plots.py	pandlines/plots.py	1;"	kind:file	line:1
plt	pandlines/plots.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:6
print_function	pandlines/plots.py	/^from __future__ import division, print_function, absolute_import$/;"	kind:namespace	line:2
private_repository	setup.py	/^    private_repository="http:\/\/pypi.theneura-int.com:8080",$/;"	kind:variable	line:16
project	docs/source/conf.py	/^project = 'datapy'$/;"	kind:variable	line:58
pygments_style	docs/source/conf.py	/^pygments_style = 'sphinx'$/;"	kind:variable	line:112
radian_hist	pandlines/plots.py	/^def radian_hist(data, bins=16, fig=None, **plot_kwargs):$/;"	kind:function	line:54
recognize	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
recognize	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
release	docs/source/conf.py	/^release = '0.0.1'$/;"	kind:variable	line:69
series	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
setup	setup.py	/^from restricted_pkg import setup$/;"	kind:namespace	line:9
setup.py	setup.py	1;"	kind:file	line:1
sns	pandlines/plots.py	/^import seaborn as sns$/;"	kind:namespace	line:7
source_suffix	docs/source/conf.py	/^source_suffix = '.rst'$/;"	kind:variable	line:48
sphinx_rtd_theme	docs/source/conf.py	/^import sphinx_rtd_theme$/;"	kind:namespace	line:132
sys	docs/source/conf.py	/^import sys$/;"	kind:namespace	line:21
templates_path	docs/source/conf.py	/^templates_path = ['_templates']$/;"	kind:variable	line:42
test_suite	setup.py	/^    test_suite='nose.collector',$/;"	kind:variable	line:31
tests_require	setup.py	/^    tests_require=['nose'],$/;"	kind:variable	line:32
texinfo_documents	docs/source/conf.py	/^texinfo_documents = [$/;"	kind:variable	line:332
to	pandlines/common.py	/^from numbers import Number  # to check for number types$/;"	kind:namespace	line:3
to	pandlines/common.py	/^import numpy as np  # to recognize numpy arrays in mongo parsing$/;"	kind:namespace	line:5
to	pandlines/common.py	/^import pandas as pd  # to recognize pandas series in mongo parsing$/;"	kind:namespace	line:6
todo_include_todos	docs/source/conf.py	/^todo_include_todos = True$/;"	kind:variable	line:121
types	pandlines/common.py	/^from numbers import Number  # to check for number types$/;"	kind:namespace	line:3
url	setup.py	/^    url='https:\/\/bitbucket.org\/theneura\/datapy',$/;"	kind:variable	line:25
version	docs/source/conf.py	/^version = '0.0.1'$/;"	kind:variable	line:67
version	setup.py	/^    version=versioneer.get_version(),$/;"	kind:variable	line:22
versioneer	setup.py	/^import versioneer$/;"	kind:namespace	line:10
warnings	pandlines/__init__.py	/^    import warnings$/;"	kind:namespace	line:6
warnings	pandlines/plots.py	/^import warnings$/;"	kind:namespace	line:3
